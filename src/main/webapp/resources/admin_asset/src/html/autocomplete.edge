@layout('layouts/_default')
@set('menu', 'advanced-forms')
@set('sub', 'autocomplete')

@section('breadcrumb')
<nav aria-label="breadcrumb" id="main-breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="index.html">Home</a></li>
    <li class="breadcrumb-item"><a href="javascript:void(0)">Advanced forms</a></li>
    <li class="breadcrumb-item active" aria-current="page">Autocomplete</li>
  </ol>
</nav>
@endsection

@section('body')
<div class="row g-5">
  <div class="col-md-6">
    <h3 class="fw-black">Basic</h3>
    <p>By default you need to type at least 1 character for the popup to show up, though thatâ€™s super easy to customize.</p>
    <input type="text" class="form-control awesomplete" data-list="Google Chrome, Mozilla Firefox, Safari, Opera, Microsoft Edge" placeholder="Enter browser name" data-minchars="1">
  </div>
  <div class="col-md-6">
    <h3 class="fw-black">E-mail autocomplete</h3>
    <p>Suggests and autocompletes the domain in email fields.</p>
    <input type="email" class="form-control awesomplete-email" placeholder="example@domain.com">
  </div>
  <div class="col-md-6">
    <h3 class="fw-black">Multiple values</h3>
    <p>Tags (comma separated).</p>
    <input type="text" class="form-control awesomplete-multiple" data-list="Google Chrome, Mozilla Firefox, Safari, Opera, Microsoft Edge" placeholder="Enter browser name" data-minchars="1">
  </div>
  <div class="col-md-6">
    <h3 class="fw-black">Combobox dropdown</h3>
    <p>Type or click dropdown.</p>
    <div class="input-group">
      <input type="text" class="form-control awesomplete-dropdown awesomplete-dropup" data-list="Google Chrome, Mozilla Firefox, Safari, Opera, Microsoft Edge" placeholder="Enter browser name">
      <button class="btn btn-light d-flex" type="button">
        <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" /></svg>
      </button>
    </div>
  </div>
</div>
@endsection

@section('lib-css')
<link rel="stylesheet" href="{{ folder.css }}awesomplete.css">
@endsection

@section('lib-js')
<script src="{{ folder.vendor }}awesomplete/awesomplete.js"></script>
<script>
// E-mail autocomplete
new Awesomplete('.awesomplete-email', {
  list: [
    'aol.com',
    'att.net',
    'comcast.net',
    'facebook.com',
    'gmail.com',
    'gmx.com',
    'googlemail.com',
    'google.com',
    'hotmail.com',
    'hotmail.co.uk',
    'mac.com',
    'me.com',
    'mail.com',
    'msn.com',
    'live.com',
    'sbcglobal.net',
    'verizon.net',
    'yahoo.com',
    'yahoo.co.uk',
  ],
  data: (text, input) => input.slice(0, input.indexOf('@')) + '@' + text,
  filter: Awesomplete.FILTER_STARTSWITH
})

// Multiple values
new Awesomplete('.awesomplete-multiple', {
  filter: (text, input) => Awesomplete.FILTER_CONTAINS(text, input.match(/[^,]*$/)[0]),
  item: (text, input) => Awesomplete.ITEM(text, input.match(/[^,]*$/)[0]),
  replace: function (text) {
    var before = this.input.value.match(/^.+,\s*|/)[0]
    this.input.value = before + text + ', '
  }
})

// Combobox dropdown
for (const target of document.querySelectorAll('.awesomplete-dropdown')) {
  const comboplete = new Awesomplete(target, {
    minChars: 0,
  })
  const btn = target.closest('.input-group').querySelector('.btn')
  Awesomplete.$(btn).addEventListener("click", function () {
    if (comboplete.ul.childNodes.length === 0) {
      comboplete.minChars = 0
      comboplete.evaluate()
    }
    else if (comboplete.ul.hasAttribute('hidden')) {
      comboplete.open()
    }
    else {
      comboplete.close()
    }
  })
}
</script>
@endsection