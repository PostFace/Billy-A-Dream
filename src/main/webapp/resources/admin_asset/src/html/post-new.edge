@layout('layouts/_default')
@set('menu', 'blog')
@set('sub', 'post-new')

@section('breadcrumb')
<nav aria-label="breadcrumb" id="main-breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="index.html">Home</a></li>
    <li class="breadcrumb-item"><a href="javascript:void(0)">Blog</a></li>
    <li class="breadcrumb-item active" aria-current="page">Add new post</li>
  </ol>
</nav>
@endsection

@section('body')
<form class="needs-validation" novalidate>
  <div class="row g-5">
    <div class="col-lg-8">
      <div class="card">
        <div class="card-body vstack gap-4">
          <div>
            <label class="form-label" for="blogTitle">Title</label>
            <input type="text" class="form-control" id="blogTitle" autofocus autocomplete="off" required>
            <div class="invalid-feedback">
              Please provide a post title.
            </div>
          </div>
          <div>
            <label class="form-label">Content</label>
            <textarea class="form-control summernote" required></textarea>
            <div class="invalid-feedback">
              Content is required.
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="card">
        <div class="card-body vstack gap-4">
          <div>
            <label class="form-label">Labels</label>
            <select class="form-select dselect" multiple id="blogLabels" required>
              <option value="">Tags</option>
              <option value="api">api</option>
              <option value="auth">auth</option>
              <option value="form">form</option>
              <option value="get-started">get-started</option>
              <option value="jamstack">jamstack</option>
              <option value="javascript">javascript</option>
              <option value="jwt">jwt</option>
              <option value="promise">promise</option>
              <option value="react">react</option>
              <option value="react-native">react-native</option>
              <option value="react-redux">react-redux</option>
              <option value="react-router">react-router</option>
              <option value="scroll">scroll</option>
              <option value="validation">validation</option>
            </select>
            <div class="invalid-feedback">
              Please provide at least one tag.
            </div>
          </div>
          <div>
            <label class="form-label">Published on</label>
            <div class="form-check">
              <input type="radio" id="customRadio1" name="blogPublished" class="form-check-input" data-bs-toggle="collapse" data-bs-target=".inline-datepicker" checked>
              <label class="form-check-label" for="customRadio1">Automatic</label>
            </div>
            <div class="form-check">
              <input type="radio" id="customRadio2" name="blogPublished" class="form-check-input" data-bs-toggle="collapse" data-bs-target=".inline-datepicker">
              <label class="form-check-label" for="customRadio2">Set date and time</label>
            </div>
            <div class="collapse inline-datepicker">
              <input type="text" class="form-control datetimepicker-inline" placeholder="Choose date">
            </div>
          </div>
          <div>
            <label for="permalink" class="form-label">Permalink</label>
            <div class="input-permalink">
              <input type="text" class="form-control" id="permalink" value="http://example.com/blog-title.html">
            </div>
          </div>
          <div>
            <label class="form-label">Reader comments</label>
            <div class="form-check">
              <input type="radio" id="customRadio5" name="blogComments" class="form-check-input" checked>
              <label class="form-check-label" for="customRadio5">Allow</label>
            </div>
            <div class="form-check">
              <input type="radio" id="customRadio6" name="blogComments" class="form-check-input">
              <label class="form-check-label" for="customRadio6">Do not allow, show existing</label>
            </div>
            <div class="form-check">
              <input type="radio" id="customRadio7" name="blogComments" class="form-check-input">
              <label class="form-check-label" for="customRadio7">Do not allow, hide existing</label>
            </div>
          </div>
          <div>
            <div class="btn-group btn-group-sm w-100 mb-1">
              <button class="btn d-flex btn-light justify-content-center gap-1" type="button">
                @svg('node_modules/heroicons/solid/check.svg')
                Save
                </button>
              <button class="btn d-flex btn-light justify-content-center gap-1" type="button">
                @svg('node_modules/heroicons/solid/eye.svg')
                Preview
                </button>
            </div>
            <button class="btn d-flex justify-content-center align-items-center gap-1 w-100 btn-primary" type="submit">
              Publish
              @svg('node_modules/heroicons/solid/arrow-right.svg')
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</form>
@endsection

@section('lib-css')
<link rel="stylesheet" href="{{ folder.vendor }}summernote/summernote-lite.css">
<link rel="stylesheet" href="{{ folder.css }}summernote-lite.css">
<link rel="stylesheet" href="{{ folder.css }}dselect.css">
<link rel="stylesheet" href="{{ folder.css }}flatpickr.css">
@endsection

@section('lib-js')
<script src="{{ folder.vendor }}jquery/jquery.slim.js"></script>
<script src="{{ folder.vendor }}summernote/summernote-lite.js"></script>
<script src="{{ folder.vendor }}dselect/dselect.js"></script>
<script src="{{ folder.vendor }}flatpickr/flatpickr.js"></script>
<script src="{{ folder.vendor }}slugify/slugify.js"></script>
<script>
$(function () {

  summernoteStyle()

  $('.summernote').summernote({
    height: 274,
    callbacks: {
      onChange: function (contents, $editable) {
        // fix https://github.com/summernote/summernote/issues/2631
        if ($(this).summernote('isEmpty') && contents != '') {
          $(this).summernote('code', '')
        }
      }
    }
  })

})

dselect(document.querySelector('#blogLabels'), {
  search: true,
  creatable: true,
})

flatpickr('.datetimepicker-inline', {
  enableTime: true,
  inline: true
})

document.getElementById('blogTitle').addEventListener('input', function () {
  let permalink = 'blog-title'
  if (this.value != '') {
    permalink = slugify(this.value, {
      remove: /[*+~.()'"!:@,]/g, // remove symbols
      lower: true // convert to lowercase
    })
  }
  permalink = `http://example.com/${permalink}.html`
  document.querySelector('#permalink').value = permalink
})

// Example starter JavaScript for disabling form submissions if there are invalid fields
void (function () {
  document.querySelectorAll('.needs-validation').forEach(form => {
    form.addEventListener('submit', event => {
      if (!form.checkValidity()) {
        event.preventDefault()
        event.stopPropagation()
      }

      form.classList.add('was-validated')
    })
  })
})()
</script>
@endsection